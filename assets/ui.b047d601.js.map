{"mappings":"ACAA,MAAM,UAAa,YACjB,mBAAoB,CAClB,IAAI,EAAS,IAAI,CAAC,aAAa,CAAC,0BAC5B,EAAS,IAAI,CAAC,aAAa,CAAC,4BAC5B,EAAS,IAAI,CAAC,aAAa,CAAC,4BAEhC,GAAI,CAAE,CAAA,GAAU,GAAU,CAAA,EACxB,OAGF,IAAM,EAAY,KAChB,EAAO,SAAS,CAAC,MAAM,CAAC,aACxB,EAAO,SAAS,CAAC,MAAM,CAAC,YAC1B,EAEA,EAAO,gBAAgB,CAAC,QAAS,AAAC,IAChC,EAAI,cAAc,GAElB,IAAI,EAAU,IAAI,CAAC,aAAa,CAAC,6BAC7B,EAAO,GAAS,YACf,IAIL,UAAU,SAAS,CAAC,SAAS,CAAC,GAE9B,IACA,OAAO,UAAU,CAAC,EAAW,KAC/B,GAEA,EAAO,SAAS,CAAC,MAAM,CAAC,SAC1B,CACF,CAEA,OAAO,cAAc,CAAC,MAAM,CAAC,UAAW","sources":["<anon>","ui/index.ts"],"sourcesContent":["var $8a162d157fa43b4b$exports = {};\nclass $8a162d157fa43b4b$var$Copy extends HTMLElement {\n    connectedCallback() {\n        let button = this.querySelector('[data-target = \"copy\"]');\n        let state0 = this.querySelector('[data-target = \"state0\"]');\n        let state1 = this.querySelector('[data-target = \"state1\"]');\n        if (!(button && state0 && state1)) return;\n        const swapState = ()=>{\n            state0.classList.toggle(\"invisible\");\n            state1.classList.toggle(\"invisible\");\n        };\n        button.addEventListener(\"click\", (evt)=>{\n            evt.preventDefault();\n            let content = this.querySelector('[data-target = \"content\"]');\n            let text = content?.textContent;\n            if (!text) return;\n            navigator.clipboard.writeText(text);\n            swapState();\n            window.setTimeout(swapState, 1000);\n        });\n        button.classList.remove(\"hidden\");\n    }\n}\nwindow.customElements.define(\"mg-copy\", $8a162d157fa43b4b$var$Copy);\n\n\n//# sourceMappingURL=ui.b047d601.js.map\n","class Copy extends HTMLElement {\n  connectedCallback() {\n    let button = this.querySelector('[data-target = \"copy\"]');\n    let state0 = this.querySelector('[data-target = \"state0\"]');\n    let state1 = this.querySelector('[data-target = \"state1\"]');\n\n    if (!(button && state0 && state1)) {\n      return;\n    }\n\n    const swapState = () => {\n      state0.classList.toggle(\"invisible\");\n      state1.classList.toggle(\"invisible\");\n    };\n\n    button.addEventListener(\"click\", (evt) => {\n      evt.preventDefault();\n\n      let content = this.querySelector('[data-target = \"content\"]');\n      let text = content?.textContent;\n      if (!text) {\n        return;\n      }\n\n      navigator.clipboard.writeText(text);\n\n      swapState();\n      window.setTimeout(swapState, 1000);\n    });\n\n    button.classList.remove(\"hidden\");\n  }\n}\n\nwindow.customElements.define(\"mg-copy\", Copy);\n"],"names":["$8a162d157fa43b4b$var$Copy","HTMLElement","connectedCallback","button","querySelector","state0","state1","swapState","classList","toggle","addEventListener","evt","preventDefault","content","text","textContent","navigator","clipboard","writeText","window","setTimeout","remove","customElements","define"],"version":3,"file":"ui.b047d601.js.map","sourceRoot":"../../"}